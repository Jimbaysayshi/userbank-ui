{"ast":null,"code":"import _toConsumableArray from\"/home/julius/.local/lib/python3.6/site-packages/userbank/userbank_ui/front/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _defineProperty from\"/home/julius/.local/lib/python3.6/site-packages/userbank/userbank_ui/front/node_modules/@babel/runtime/helpers/esm/defineProperty\";import _objectSpread from\"/home/julius/.local/lib/python3.6/site-packages/userbank/userbank_ui/front/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _classCallCheck from\"/home/julius/.local/lib/python3.6/site-packages/userbank/userbank_ui/front/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/home/julius/.local/lib/python3.6/site-packages/userbank/userbank_ui/front/node_modules/@babel/runtime/helpers/esm/createClass\";import _possibleConstructorReturn from\"/home/julius/.local/lib/python3.6/site-packages/userbank/userbank_ui/front/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"/home/julius/.local/lib/python3.6/site-packages/userbank/userbank_ui/front/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";import _assertThisInitialized from\"/home/julius/.local/lib/python3.6/site-packages/userbank/userbank_ui/front/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";import _inherits from\"/home/julius/.local/lib/python3.6/site-packages/userbank/userbank_ui/front/node_modules/@babel/runtime/helpers/esm/inherits\";import React,{Component}from'react';import{Button}from\"react-bootstrap\";import{programs,credentials,remove,change}from'./UserFunctions';import\"./Programs.css\";var ProgramsList=/*#__PURE__*/function(_Component){_inherits(ProgramsList,_Component);function ProgramsList(props){var _this;_classCallCheck(this,ProgramsList);_this=_possibleConstructorReturn(this,_getPrototypeOf(ProgramsList).call(this,props));_this.resetFormState=function(){_this.setState({formState:{program:'',username:'',password:'',password_re:'',mode:\"submit\",idx:''}});};_this.onChange=function(e){_this.setState({formState:_objectSpread({},_this.state.formState,_defineProperty({},e.target.name,e.target.value))});};_this.onSubmit=function(e){var _this$state=_this.state,programList=_this$state.programList,formState=_this$state.formState;console.log(programList);console.log(formState);e.preventDefault();var program=e.target.querySelector(\"input[name='program']\").value;var username=e.target.querySelector(\"input[name='username']\").value;var password=e.target.querySelector(\"input[name='password']\").value;var password_re=e.target.querySelector(\"input[name='password_re']\").value;var index=0;if(formState.mode===\"submit\"){if(programList.length!==0){var len=_this.state.programList.length;index=_this.state.programList[len-1].idx+1;}var credentialSet={program:program,username:username,password:password,index:index};_this.addCredentials(credentialSet).then(function(res){if(!res.err){_this.setState({programList:[].concat(_toConsumableArray(_this.state.programList),[{program:program,username:username,password:password,password_re:password_re,updating:false,idx:index}])});}});}else if(formState.mode===\"edit\"){index=programList.find(function(item){return item.idx===formState.idx;}).idx;console.log(index);console.log(programList[index]);programList[index]={program:program,username:username,password:password,updating:false,idx:programList[index].idx};var _credentialSet={program:program,username:username,password:password,index:programList[index].idx};_this.addCredentials(_credentialSet).then(function(res){if(!res.err){_this.setState({programList:_toConsumableArray(programList)});}});}};_this.updateCredentials=function(key){var programList=_this.state.programList;console.log(programList[key]);programList[key].updating=true;_this.setState({formState:_objectSpread({},_this.state.programList[key],{mode:\"edit\"}),programList:programList});};_this.deleteCredentials=function(key){var programList=_this.state.programList;var removed=programList.splice(key,1);console.log(removed[0]);var removeProgram={program:removed[0].program,username:removed[0].username};remove(removeProgram).then(function(res){if(!res.err){_this.setState({programList:_toConsumableArray(programList)});}});};_this.state={programList:[],//store initial list of programs and credentials\nmakeChanges:false,//true if user wants to change existing credentials \nformState:{idx:'',program:'',username:'',password:'',password_re:'',mode:\"submit\"}};_this.getToken=_this.getToken.bind(_assertThisInitialized(_this));//get token from local storage\nreturn _this;}_createClass(ProgramsList,[{key:\"addCredentials\",value:function addCredentials(credentialSet){var _this2=this;var formState=this.state.formState;if(formState.mode==='submit'){credentials(credentialSet).then(function(res){if(!res.err){_this2.resetFormState();}});}else if(formState.mode==='edit'){change(credentialSet).then(function(res){if(!res.err){_this2.resetFormState();}});}}},{key:\"getToken\",value:function getToken(){return localStorage.getItem('jwt-token');}},{key:\"validateForm\",value:function validateForm(formState){return formState.password===formState.password_re;}},{key:\"componentDidMount\",value:function componentDidMount(){var _this3=this;var token=this.getToken();if(!token){this.props.history.push('/');}programs(token).then(function(res){if(!res.err){_this3.setState({programList:res.programs});}}).catch(function(err){_this3.props.history.push('/');});}},{key:\"formTitle\",value:function formTitle(){var formState=this.state.formState;var title='Add';switch(formState.mode){case'edit':title='Edit';default:title='Add';}return title;}},{key:\"render\",value:function render(){var _this$state2=this.state,programList=_this$state2.programList,formState=_this$state2.formState;return React.createElement(\"div\",{className:\"Programs\"},React.createElement(\"h1\",null,\"KEYBANK\"),React.createElement(\"div\",{className:\"programtable\"},React.createElement(Table,{programList:programList,updateCredentials:this.updateCredentials,deleteCredentials:this.deleteCredentials})),React.createElement(\"div\",{className:\"addform\"},React.createElement(\"h3\",{className:\"form-title\"},\" \",formTitle,\" credentials\"),React.createElement(Form,{formState:formState,onChange:this.onChange,onSubmit:this.onSubmit,validateForm:this.validateForm})));}}]);return ProgramsList;}(Component);var Table=function Table(_ref){var _ref$programList=_ref.programList,programList=_ref$programList===void 0?[]:_ref$programList,updateCredentials=_ref.updateCredentials,deleteCredentials=_ref.deleteCredentials;if(!programList.length>0){return React.createElement(\"p\",null,\"Start by adding new credentials\");}return React.createElement(\"table\",null,React.createElement(\"tr\",null,React.createElement(\"th\",null,\"Program\"),React.createElement(\"th\",null,\"Username\"),React.createElement(\"th\",null,\"Password\"),React.createElement(\"th\",null,\"Actions\")),programList.map(function(item,key){return React.createElement(\"tr\",null,React.createElement(\"td\",null,React.createElement(\"p\",null,item.program)),React.createElement(\"td\",null,React.createElement(\"p\",null,item.username)),React.createElement(\"td\",null,React.createElement(\"p\",null,item.password)),React.createElement(\"td\",null,React.createElement(Button,{className:\"edit-btn\",block:true,bsSize:\"large\",onClick:function onClick(){return updateCredentials(key);}},\"edit\"),React.createElement(Button,{className:\"delete-btn\",block:true,bsSize:\"large\",onClick:function onClick(){return deleteCredentials(key);}},\"delete\")));}));};var Field=function Field(_ref2){var _ref2$label=_ref2.label,label=_ref2$label===void 0?\"\":_ref2$label,_ref2$name=_ref2.name,name=_ref2$name===void 0?\"\":_ref2$name,_ref2$value=_ref2.value,value=_ref2$value===void 0?\"\":_ref2$value,_ref2$type=_ref2.type,type=_ref2$type===void 0?\"\":_ref2$type,onChange=_ref2.onChange;return React.createElement(\"div\",{className:\"field-set\"},React.createElement(\"label\",{className:\"field-label\",htmlFor:name},label),React.createElement(\"input\",{className:\"field-input\",type:type,name:name,value:value,onChange:onChange}));};var Form=function Form(_ref3){var formState=_ref3.formState,onChange=_ref3.onChange,onSubmit=_ref3.onSubmit,validateForm=_ref3.validateForm;return React.createElement(\"form\",{className:\"form\",onSubmit:onSubmit},React.createElement(\"fieldset\",null,React.createElement(Field,{name:\"program\",label:\"Program\",type:\"text\",value:formState.program,onChange:onChange}),React.createElement(Field,{name:\"username\",label:\"Username\",type:\"text\",value:formState.username,onChange:onChange}),React.createElement(Field,{name:\"password\",label:\"Password\",type:\"password\",value:formState.password,onChange:onChange}),React.createElement(Field,{name:\"password_re\",label:\"Password again\",type:\"password\",value:formState.password_re,onChange:onChange})),React.createElement(\"div\",{className:\"button-group\"},React.createElement(Button,{type:formState.mode,disabled:!validateForm(formState)},formState.mode)));};export default ProgramsList;","map":{"version":3,"sources":["/home/julius/.local/lib/python3.6/site-packages/userbank/userbank_ui/front/src/components/Programs.js"],"names":["React","Component","Button","programs","credentials","remove","change","ProgramsList","props","resetFormState","setState","formState","program","username","password","password_re","mode","idx","onChange","e","state","target","name","value","onSubmit","programList","console","log","preventDefault","querySelector","index","length","len","credentialSet","addCredentials","then","res","err","updating","find","item","updateCredentials","key","deleteCredentials","removed","splice","removeProgram","makeChanges","getToken","bind","localStorage","getItem","token","history","push","catch","title","formTitle","validateForm","Table","map","Field","label","type","Form"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport { Button } from \"react-bootstrap\"\nimport { programs, credentials, remove, change } from './UserFunctions'\n\n\nimport \"./Programs.css\"\n\n\nclass ProgramsList extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            programList: [], //store initial list of programs and credentials\n            makeChanges: false, //true if user wants to change existing credentials \n\n            formState: {\n                idx: '',\n                program: '', \n                username: '',\n                password:'',\n                password_re:'',\n                mode: \"submit\",\n            }\n        }\n        this.getToken = this.getToken.bind(this) //get token from local storage\n    }\n\n    resetFormState = () => {\n        this.setState({\n            formState:{\n                program: '',\n                username: '',\n                password: '',\n                password_re: '',\n                mode: \"submit\",\n                idx: ''\n            }\n        })\n    }\n    \n    onChange = e => {\n        this.setState({\n            formState:{\n                ...this.state.formState,\n            \n                [e.target.name]: e.target.value\n            }\n        })\n    }\n\n    onSubmit = e => {\n        const { programList, formState } = this.state\n        console.log(programList)\n        console.log(formState)\n        e.preventDefault()\n        const program = e.target.querySelector(\"input[name='program']\").value      \n        const username = e.target.querySelector(\"input[name='username']\").value      \n        const password = e.target.querySelector(\"input[name='password']\").value      \n        const password_re = e.target.querySelector(\"input[name='password_re']\").value\n        let index = 0\n        if(formState.mode === \"submit\"){\n            if(programList.length !== 0){\n                const len = this.state.programList.length\n                index = this.state.programList[len-1].idx +1  \n            }\n            const credentialSet = {\n                program: program,\n                username: username,\n                password: password,\n                index: index\n            } \n            this.addCredentials(credentialSet).then(res =>{\n                if(!res.err){\n                    this.setState({\n                        programList: [\n                            ...this.state.programList,\n                            {\n                                program,\n                                username,\n                                password,\n                                password_re,\n                                updating: false,\n                                idx: index\n                            }\n                        ]\n                    })\n                }\n            })\n\n        \n        } else if (formState.mode === \"edit\"){\n\n            index = programList.find((item) => item.idx === formState.idx).idx\n            console.log(index)\n            console.log(programList[index])\n            \n            programList[index] = {\n                program,\n                username,\n                password,\n                updating: false,\n                idx:programList[index].idx\n            }\n                        \n            const credentialSet = {\n                program: program,\n                username: username,\n                password: password,\n                index: programList[index].idx\n            } \n            this.addCredentials(credentialSet).then(res =>{\n                if(!res.err){\n                    this.setState({\n                        programList: [...programList]\n                    })\n                }\n            })\n        }\n    }\n\n    addCredentials(credentialSet){\n        const { formState } = this.state\n\n        if (formState.mode === 'submit'){\n            credentials(credentialSet).then(res => {\n                if(!res.err){\n                    this.resetFormState()\n                }\n            })\n        } else if (formState.mode === 'edit'){\n            change(credentialSet).then(res => {\n                if(!res.err){\n                    this.resetFormState()\n                }\n            })\n        }\n    }\n\n    updateCredentials = key => {\n        let { programList } = this.state\n        console.log(programList[key])\n        programList[key].updating = true\n        this.setState({\n            formState: { ...this.state.programList[key], mode: \"edit\"},\n            programList\n        })\n    }\n\n    deleteCredentials = key => {\n        let { programList } = this.state\n        var removed = programList.splice(key, 1)\n        console.log(removed[0])\n        const removeProgram = {\n            program: removed[0].program,\n            username: removed[0].username,\n        }\n        remove(removeProgram).then(res => {\n            if(!res.err){\n                this.setState({\n                    programList: [...programList]\n                })\n            }\n        })\n\n    }\n   \n    getToken(){\n        return localStorage.getItem('jwt-token')\n    }\n\n    validateForm(formState){\n        return formState.password === formState.password_re\n        \n    }\n\n    componentDidMount() {\n        const token = this.getToken()\n        if(!token){\n            this.props.history.push('/')\n        }\n        programs(token).then(res => {      \n            if(!res.err) {\n                this.setState({\n                    programList: res.programs\n                })  \n            }\n        }).catch(err =>{\n            this.props.history.push('/')        \n        })\n    }\n    \n    formTitle(){\n        let { formState } = this.state\n        let title = 'Add'\n        switch(formState.mode){\n            case 'edit':\n                title = 'Edit'\n            default:\n                title = 'Add'\n        }\n        return title\n    }\n   \n    render(){\n        const {programList, formState} = this.state\n        return (\n            <div className=\"Programs\">\n                <h1>KEYBANK</h1>\n                <div className=\"programtable\">\n                    <Table\n                    programList={programList}\n                    updateCredentials={this.updateCredentials}\n                    deleteCredentials={this.deleteCredentials}\n                    />\n                </div>\n                <div className=\"addform\">\n                    <h3 className=\"form-title\"> {formTitle} credentials</h3>\n                    <Form\n                    formState={formState}\n                    onChange={this.onChange}\n                    onSubmit={this.onSubmit}\n                    validateForm={this.validateForm}\n                    />\n                </div>\n            </div>\n        )\n    }   \n}\nconst Table =({ programList=[], updateCredentials, deleteCredentials }) =>{\n    if (!programList.length > 0){\n        return <p>Start by adding new credentials</p>\n    }\n    return(\n        <table>\n            <tr>\n                <th>Program</th>\n                <th>Username</th>\n                <th>Password</th>\n                <th>Actions</th>\n            </tr>\n            \n            {programList.map((item, key) => {\n                return (            \n                <tr>\n                    <td>\n                        <p>{item.program}</p>\n                    </td>\n                    <td>\n                        <p>{item.username}</p>\n                    </td>\n                    <td>\n                        <p>{item.password}</p>\n                    </td>\n                    <td>\n                    <Button className=\"edit-btn\" block bsSize=\"large\" onClick={() => updateCredentials(key)}>\n                        edit\n                    </Button>\n                    <Button className=\"delete-btn\" block bsSize=\"large\" onClick={() => deleteCredentials(key)}>\n                        delete\n                    </Button>\n                    </td>\n                </tr>\n                )\n            })}\n    </table>\n    )\n}\n\nconst Field = ({label =\"\", name=\"\", value=\"\", type=\"\", onChange}) =>{\n        return(<div className=\"field-set\">\n            <label className=\"field-label\" htmlFor={name}>{label}</label>\n            <input className=\"field-input\" type={type} name={name} value={value} onChange={onChange}/>\n        </div>\n        )}\n\nconst Form = ({ formState, onChange, onSubmit, validateForm }) => {\n    \n\n    return (\n\n            <form className=\"form\" onSubmit={onSubmit}>\n                <fieldset>\n                    <Field \n                        name=\"program\"\n                        label=\"Program\"\n                        type=\"text\"\n                        value={formState.program}\n                        onChange={onChange}\n                    />\n                    <Field \n                        name=\"username\"\n                        label=\"Username\"\n                        type=\"text\"\n                        value={formState.username}\n                        onChange={onChange}\n                    />\n                    <Field \n                        name=\"password\"\n                        label=\"Password\"\n                        type=\"password\"\n                        value={formState.password}\n                        onChange={onChange}\n                    />\n                    <Field\n                        name=\"password_re\"\n                        label=\"Password again\"\n                        type=\"password\"\n                        value={formState.password_re}\n                        onChange={onChange}\n                    />\n                </fieldset>\n                <div className=\"button-group\">\n                    <Button type={formState.mode} disabled={!validateForm(formState)}>\n                        {formState.mode}\n                    </Button>\n                </div>\n            </form>\n\n    )      \n}\n    \nexport default ProgramsList"]},"metadata":{},"sourceType":"module"}